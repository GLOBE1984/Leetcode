Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6




/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void flatten(TreeNode root) {
        if(root != null) {
            flattenTree(root);
        }
    }
    
    public TreeNode flattenTree(TreeNode root) {
        if(root.left == null && root.right == null) {
            return root;
        }
        
        TreeNode subLast = root;
        TreeNode tmp = root.right;
        if(root.left != null) {
            subLast = flattenTree(root.left);
            root.right = root.left;
            root.left = null;
        }
        if(tmp != null) {
            subLast.right = tmp;
            subLast = flattenTree(tmp);
        }
        
        return subLast;
    }
}