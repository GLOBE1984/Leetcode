Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ¡Ü b ¡Ü c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)






public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        if(nums == null) {
            return null;
        }
        
        List<List<Integer>> results = new ArrayList<List<Integer>>();
        if(nums.length < 3) {
            return results;
        }
        
        int previous = 0;
        Arrays.sort(nums);
        int length = nums.length;
        for(int i = 0; i < length; ++i) {
            int num = nums[i];
            if(i != 0) {
                if(previous == num) {
                    continue;
                }
                else {
                    
                }
            }
            
            int sum = 0 - num;
            
            int j = i + 1;
            int k = length - 1;
            while(j < k) {
                if((nums[j]+nums[k]) < sum) {
                    j++;
                }
                else if((nums[j]+nums[k]) > sum) {
                    k--;
                }
                else {
                    List<Integer> result = Arrays.asList(Integer.valueOf(num), Integer.valueOf(nums[j]), Integer.valueOf(nums[k]));
                    results.add(result);
                    j++;
                    k--;
                    while((nums[j]==nums[j-1]) && (nums[k]==nums[k+1]) && (j<k)) {
                        j++;
                        k--;
                    }
                }
            }
            
            previous = num;
        }
        
        return results;
    }
}