All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

For example,

Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",

Return:
["AAAAACCCCC", "CCCCCAAAAA"].





class Solution {
    public List<String> findRepeatedDnaSequences(String s) {
        List<String> list = new ArrayList<String>();
        
        if(s != null && s.length() > 10) {
            Map<String, Integer> visited = new HashMap<String, Integer>();
            int length = s.length();
            for(int i = 0; (i+10) <= length; ++i) {
                String sub = s.substring(i, i + 10);
                if(visited.get(sub) != null && visited.get(sub).intValue() == 1) {
                    list.add(sub);
                    visited.put(sub, -1);
                }
                else if(visited.get(sub) == null) {
                    visited.put(sub, 1);
                }
            }
        }
        
        return list;
    }
}