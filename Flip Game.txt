You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move and therefore the other person will be the winner.

Write a function to compute all possible states of the string after one valid move.

For example, given s = "++++", after one move, it may become one of the following states:

[
  "--++",
  "+--+",
  "++--"
]
If there is no valid move, return an empty list [].




public class Solution {
    public List<String> generatePossibleNextMoves(String s) {
        List<String> results = new ArrayList<String>();
        
        if(s != null && s.length() > 0) {
            int length = s.length();
            
            char prev_c = '+';
            for(int i = 0; i < length; ++i) {
                char c = s.charAt(i);
                if(i != 0) {
                    if(c == prev_c && c == '+') {
                        String str = s.substring(0, i-1) + "--";
                        if(i < length-1) {
                            str = str + s.substring(i+1);
                        }
                        results.add(str);
                    }
                }
                prev_c = c;
            }
        }
        
        return results;
    }
}