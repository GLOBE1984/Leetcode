Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.




public class Solution {
    public boolean isValid(String s) {
        if(s == null) {
            return false;
        }
        
        Stack<Character> stack = new Stack<Character>();
        int length = s.length();
        for(int i = 0; i < length; ++i) {
            char c = s.charAt(i);
            if(c == '(' || c == '['|| c == '{') {
                stack.push(c);
            }
            else if(c == ')' || c == ']'|| c == '}') {
                if(!stack.empty()) {
                    if(c == ')') {
                        if(stack.peek().charValue() != '(') {
                            return false;
                        }
                        else {
                            stack.pop();
                        }
                    }
                    else if(c == ']') {
                        if(stack.peek().charValue() != '[') {
                            return false;
                        }
                        else {
                            stack.pop();
                        }
                    }
                    else {
                        if(stack.peek().charValue() != '{') {
                            return false;
                        }
                        else {
                            stack.pop();
                        }
                    }
                }
                else {
                    return false;
                }
            }
        }
        
        if(stack.empty()) {
            return true;
        }
        else {
            return false;
        }
    }
}