You need to find the largest value in each row of a binary tree.

Example:
Input: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

Output: [1, 3, 9]





/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        
        if(root != null) {
            Queue<TreeNode> queue = new LinkedList<TreeNode>();
            queue.offer(root);
            
            while(!queue.isEmpty()) {
                Queue<TreeNode> level = new LinkedList<TreeNode>();
                int max = Integer.MIN_VALUE;
                while(!queue.isEmpty()) {
                    TreeNode node = queue.poll();
                    if(node.val > max) {
                        max = node.val;
                    }
                    if(node.left != null) {
                        level.offer(node.left);
                    }
                    if(node.right != null) {
                        level.offer(node.right);
                    }
                }
                result.add(max);
                queue = level;
            }
        }
        
        return result;
    }
}