Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).




public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        if(nums == null || nums.length == 0) {
            return Integer.MAX_VALUE;
        }
        
        Arrays.sort(nums);
        
        int result = Integer.MAX_VALUE;
        int min = Integer.MAX_VALUE;
        for(int i = 0; i < nums.length; ++i) {
            int num = nums[i];
            
            int sum = target - num;
            
            int j = i + 1;
            int k = nums.length - 1;
            while(j < k) {
                if((nums[j]+nums[k]) < sum) {
                    if((sum-nums[j]-nums[k]) < min) {
                        min = sum - nums[j] - nums[k];
                        result = num + nums[j] + nums[k];
                    }
                    j++;
                }
                else if((nums[j]+nums[k]) > sum) {
                    if((nums[j]+nums[k]-sum) < min) {
                        min = nums[j] + nums[k] - sum;
                        result = num + nums[j] + nums[k];
                    }
                    k--;
                }
                else {
                    return target;
                }
            }
        }
        
        return result;
        
    }
}