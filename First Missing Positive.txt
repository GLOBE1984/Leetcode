Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.




// refer to the counting sort
public class Solution {
    public int firstMissingPositive(int[] nums) {
        if(nums == null || nums.length==0) {
            return 1;
        }
        
        int length = nums.length;
        for(int i = 0; i < length; ++i) {
            if(nums[i] <= length && nums[i] > 0 && nums[nums[i]-1] != nums[i]) {
                int temp = nums[nums[i]-1];
                nums[nums[i]-1] = nums[i];
                nums[i] = temp;
                i--;
            }
        }
        for(int i = 0; i < length; ++i) {
            if(nums[i] != i+1) {
                return i + 1;
            }
        }
        return length + 1;
    }
}