An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:

a) it                      --> it    (no abbreviation)

     1
     ↓
b) d|o|g                   --> d1g

              1    1  1
     1---5----0----5--8
     ↓   ↓    ↓    ↓  ↓    
c) i|nternationalizatio|n  --> i18n

              1
     1---5----0
     ↓   ↓    ↓
d) l|ocalizatio|n          --> l10n
Assume you have a dictionary and given a word, find whether its abbreviation is unique in the dictionary. A word's abbreviation is unique if no other word from the dictionary has the same abbreviation.

Example:

Given dictionary = [ "deer", "door", "cake", "card" ]

isUnique("dear") -> false
isUnique("cart") -> true
isUnique("cane") -> false
isUnique("make") -> true



class ValidWordAbbr {

    private Map<String, Set<String>> map;
    
    public ValidWordAbbr(String[] dictionary) {
        this.map = new HashMap<>();
        for(String word : dictionary) {
            String abbreviation = abbreviate(word);
            Set<String> set = this.map.get(abbreviation);
            if(set == null) {
                set = new HashSet<>();
            }
            set.add(word);
            this.map.put(abbreviation, set);
        }
    }
    
    public boolean isUnique(String word) {
        Set<String> set = this.map.get(abbreviate(word));
        return set == null || (set.size() == 1 && set.contains(word));
    }
    
    private String abbreviate(String word) {
        if(word != null && word.length() > 2) {
            return "" + word.charAt(0) + word.length() + word.charAt(word.length()-1);
        } else if(word != null) {
            return word;
        } else {
            return null;
        }
    }
}

/**
 * Your ValidWordAbbr object will be instantiated and called as such:
 * ValidWordAbbr obj = new ValidWordAbbr(dictionary);
 * boolean param_1 = obj.isUnique(word);
 */

