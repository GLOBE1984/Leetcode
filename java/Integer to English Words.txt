Convert a non-negative integer num to its English words representation.

 

Example 1:

Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
Example 4:

Input: num = 1234567891
Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One"
 

Constraints:

0 <= num <= 231 - 1





class Solution {
    public String numberToWords(int num) {
        if(num > 0) {
            
            LinkedList<Integer> thousands = new LinkedList<>();
            int val = num;
            while(val > 0) {
                thousands.addFirst(val%1000);
                val = val / 1000;
            }
            
            StringBuilder builder = new StringBuilder();
            
            int index = thousands.size();
            for(Integer thousand : thousands) {
                String str = hundredsToWords(thousand.intValue());
                if(str.length() > 0) {
                    if(index == 4) {
                        builder.append(str).append(" Billion ");
                    } else if(index == 3) {
                        builder.append(str).append(" Million ");
                    } else if(index == 2) {
                        builder.append(str).append(" Thousand ");
                    } else {
                        builder.append(str);
                    }
                }
                
                index--;
            }
                        
            return builder.toString().trim();           
        } else {
            return "Zero";
        }
    }
    
    private String hundredsToWords(int num) {
        if(num == 0) {
            return "";
        }
        
        int val = num;
        int hundred = val / 100;
        val = val % 100;
        
        StringBuilder builder = new StringBuilder();
        if(hundred > 0) {
            builder.append(getSingle(hundred)).append(" Hundred ");
        }
        
        if(val < 10) {
            builder.append(getSingle(val));
        } else if(val >= 10 && val < 20) {
            builder.append(getDouble(val));
        } else {
            int tens = val / 10;
            val = val % 10;
            builder.append(getDouble(tens*10)).append(" ");
            builder.append(getSingle(val));
        }
        
        return builder.toString().trim(); 
    }
    
    private String getSingle(int num) {
        if(num == 9) {
            return "Nine";
        } else if(num == 8) {
            return "Eight";
        } else if(num == 7) {
            return "Seven";
        } else if(num == 6) {
            return "Six";
        } else if(num == 5) {
            return "Five";
        } else if(num == 4) {
            return "Four";
        } else if(num == 3) {
            return "Three";
        } else if(num == 2) {
            return "Two";
        } else if(num == 1) {
            return "One";
        } else {
            return "";
        }
    }
    
    private String getDouble(int num) {
        if(num == 10) {
            return "Ten";
        } else if(num == 11) {
            return "Eleven";
        } else if(num == 12) {
            return "Twelve";
        } else if(num == 13) {
            return "Thirteen";
        } else if(num == 14) {
            return "Fourteen";
        } else if(num == 15) {
            return "Fifteen";
        } else if(num == 16) {
            return "Sixteen";
        } else if(num == 17) {
            return "Seventeen";
        } else if(num == 18) {
            return "Eighteen";
        } else if(num == 19) {
            return "Nineteen";
        } else if(num == 20) {
            return "Twenty";
        } else if(num == 30) {
            return "Thirty";
        } else if(num == 40) {
            return "Forty";
        } else if(num == 50) {
            return "Fifty";
        } else if(num == 60) {
            return "Sixty";
        } else if(num == 70) {
            return "Seventy";
        } else if(num == 80) {
            return "Eighty";
        } else {
            return "Ninety";
        }
    }
}