Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].





class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, new Comparator<int[]>() {
            public int compare(int[] a1, int[] a2) {
                if(a1[0] != a2[0]) {
                    return a1[0] - a2[0];
                } else {
                    return a1[1] - a2[1];
                }
            }
        });
        
        List<int[]> list = new ArrayList<>();
        int start = intervals[0][0];
        int end = intervals[0][1];
        
        for(int[] interval : intervals) {
            if(interval[0] <= end) {
                end = Math.max(end, interval[1]);
            } else {
                list.add(new int[]{start, end});
                start = interval[0];
                end = interval[1];
            }
        }
        list.add(new int[]{start, end});
        
        int[][] result = new int[list.size()][2];
        for(int i = 0; i < list.size(); ++i) {
            result[i] = list.get(i);
        }
        
        return result;
    }
}