Given a non-empty string s and an abbreviation abbr, return whether the string matches with the given abbreviation.

A string such as "word" contains only the following valid abbreviations:

["word", "1ord", "w1rd", "wo1d", "wor1", "2rd", "w2d", "wo2", "1o1d", "1or1", "w1r1", "1o2", "2r1", "3d", "w3", "4"]
Notice that only the above abbreviations are valid abbreviations of the string "word". Any other string is not a valid abbreviation of "word".

Note:
Assume s contains only lowercase letters and abbr contains only lowercase letters and digits.

Example 1:
Given s = "internationalization", abbr = "i12iz4n":

Return true.
Example 2:
Given s = "apple", abbr = "a2e":

Return false.





class Solution {
    public boolean validWordAbbreviation(String word, String abbr) {
        if(word != null && word.length() > 0 && abbr != null && abbr.length() > 0) {
            int index1 = 0;
            int index2 = 0;
            int count = 0;
            
            while(index1 < word.length()) {
                if(count == 0) {
                    if(index2 < abbr.length()) {
                        char c1 = word.charAt(index1);
                        char c2 = abbr.charAt(index2);
                        if(c1 >= 'a' && c1 <= 'z' && c2 >= 'a' && c2 <= 'z') {
                            if(c1 != c2) {
                                return false;
                            }
                            index1++;
                            index2++;
                        } else {
                            if(c2 == '0') {
                                return false;
                            }
                            while(index2 < abbr.length()) {
                                c2 = abbr.charAt(index2);
                                if(c2 >= '0' && c2 <= '9') {
                                    count = 10 * count + (c2 - '0');
                                    index2++;
                                } else {
                                    break;
                                }
                            }
                        }
                    } else {
                        return false;
                    }
                } else {
                    count--;
                    index1++;
                }
            }
            
            return index2 == abbr.length() && count == 0;
        } else {
            return false;
        }
    }
}