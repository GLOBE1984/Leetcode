Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.

Note:
The string will only contain lowercase characters a-z. The maximum length of the string is 50000.





class Solution {
    public boolean validPalindrome(String s) {
        if(s != null && s.length() > 0) {            
            return validPalindrome(s, 0, s.length()-1, 1);
        } else {
            return true;
        }
    }
    
    private boolean validPalindrome(String s, int left, int right, int times) {
        if(left >= right) {
            return true;
        }
        
        if(s.charAt(left) == s.charAt(right)) {
            return validPalindrome(s, left+1, right-1, times);
        } else {
            if(times == 1) {
                return validPalindrome(s, left+1, right, 0) || validPalindrome(s, left, right-1, 0);
            } else {
                return false;
            }
        }
    }
}