Given a sorted integer array without duplicates, return the summary of its ranges.

Example 1:

Input:  [0,1,2,4,5,7]
Output: ["0->2","4->5","7"]
Explanation: 0,1,2 form a continuous range; 4,5 form a continuous range.
Example 2:

Input:  [0,2,3,4,6,8,9]
Output: ["0","2->4","6","8->9"]
Explanation: 2,3,4 form a continuous range; 8,9 form a continuous range.





class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> results = new ArrayList<>();
        
        if(nums != null && nums.length > 1) {
            int start = 0;
            int current = 1;
            while(current < nums.length) {
                if(((long)nums[current])-((long)nums[current-1]) > 1) {
                    if(current-start > 1) {
                        results.add(nums[start] + "->" + nums[current-1]);
                    } else {
                        results.add(Integer.toString(nums[current-1]));
                    }
                    start = current;
                }
                current++;
            }
            if(current-start > 1) {
                results.add(nums[start] + "->" + nums[current-1]);
            } else {
                results.add(Integer.toString(nums[current-1]));
            }
        } else if(nums != null && nums.length == 1) {
            results.add(Integer.toString(nums[0]));
        }
        
        return results;
    }
}