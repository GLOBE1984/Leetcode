Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.





public class Solution {
    public int firstUniqChar(String s) {
        Map<Character, Integer> records = new HashMap<Character, Integer>();
        LinkedHashSet<Integer> poses = new LinkedHashSet<Integer>();
        
        int length = s.length();
        for(int i = 0; i < length; ++i) {
            char c = s.charAt(i);
            if(records.get(c) != null) {
                if(poses.contains(records.get(c))) {
                    poses.remove(records.get(c));
                }
            }
            else {
                records.put(c, i);
                poses.add(i);
            }
        }
        
        Iterator<Integer> iterator = poses.iterator();
        if(iterator.hasNext()) {
            return iterator.next();
        }
        else {
            return -1;
        }
    }
}