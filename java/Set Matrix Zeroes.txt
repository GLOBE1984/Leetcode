Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?





public class Solution {
    public void setZeroes(int[][] matrix) {
        if(matrix != null && matrix.length != 0 && matrix[0].length != 0) {
            int length1 = matrix.length;
            int length2 = matrix[0].length;
            
            boolean is_row0_zero = false;
            for(int j = 0; j < length2; ++j) {
                if(matrix[0][j] == 0) {
                    is_row0_zero = true;
                    break;
                }
            }
            
            boolean is_col0_zero = false;
            for(int i = 0; i < length1; ++i) {
                if(matrix[i][0] == 0) {
                    is_col0_zero = true;
                    break;
                }
            }
            
            for(int i = 1; i < length1; ++i) {
                for(int j = 1; j < length2; ++j) {
                    if(matrix[i][j] == 0) {
                        matrix[i][0] = 0;
                        matrix[0][j] = 0;
                    }
                }
            }
            
            for(int i = 1; i < length1; ++i) {
                for(int j = 1; j < length2; ++j) {
                    if(matrix[i][0] == 0 || matrix[0][j] == 0) {
                        matrix[i][j] = 0;
                    }
                }
            }
            
            if(is_row0_zero) {
                for(int j = 0; j < length2; ++j) {
                    matrix[0][j] = 0;
                }
            }
            
            if(is_col0_zero) {
                for(int i = 0; i < length1; ++i) {
                    matrix[i][0] = 0;
                }
            }
        }
    }
}