Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.





class Solution {
    public int maxArea(int[] height) {
        if(height != null && height.length > 0) {
            int len = height.length;

            int lh = height[0];
            int rh = height[len - 1];
            int area = 0;
            int i = 0;
            int j = len - 1;

            while (i < j) {
                int tmp = Math.min(lh, rh) * (j - i);

                if (tmp > area) {
                    area = tmp;
                }

                if (lh < rh) {
                    while (i < j && height[i] <= lh) {
                        i++;
                    }
                    lh = height[i];
                } else {
                    while (i < j && height[j] <= rh) {
                        j--;
                    }
                    rh = height[j];
                }
            }

            return area;
        }
        else {
            return 0;
        }
    }
}