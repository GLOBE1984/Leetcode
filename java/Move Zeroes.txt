Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.





// Solution 1:
class Solution {
    public void moveZeroes(int[] nums) {
        if(nums != null && nums.length > 0) {
            int length = nums.length;
            int index_zero = 0;
            int index_nonzero = 0;
            while(index_nonzero < length) {
                if(nums[index_nonzero] != 0) {
                    int tmp = nums[index_nonzero];
                    nums[index_nonzero] = 0;
                    nums[index_zero] = tmp;
                    index_zero++;
                }
                index_nonzero++;
            }
        }
    }
}


// Solution 2: 
class Solution {
    public void moveZeroes(int[] nums) {
        if(nums != null && nums.length > 0) {
            int zeroCount = 0;
            int index = 0;
            
            while(index < nums.length) {
                if(nums[index] != 0) {
                    nums[index-zeroCount] = nums[index];
                    if(zeroCount > 0) {
                        nums[index] = 0;
                    }
                } else {
                    zeroCount++;
                }
                index++;
            }
        }
    }
}