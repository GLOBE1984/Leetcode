Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.





class Solution {
    public int search(int[] nums, int target) {
        if(nums != null && nums.length > 0) {
            return search(nums, target, 0, nums.length-1);
        } else {
            return -1;
        }
    }
    
    private int search(int[] nums, int target, int left, int right) {
        if(left == right) {
            return nums[left] == target ? left : -1;
        }
        
        int mid = (left + right) / 2;
        
        if(nums[left] > nums[right]) {
            int index1 = search(nums, target, left, mid);
            int index2 = search(nums, target, mid+1, right);
            
            return Math.max(index1, index2);
        } else {
            if(nums[mid] > target) {
                return search(nums, target, left, mid);
            } else if(nums[mid] < target) {
                return search(nums, target, mid+1, right);
            } else {
                return mid;
            }
        }
    }
}