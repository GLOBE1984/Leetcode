Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Could you do it in-place without allocating extra space?





public class Solution {
    public void reverseWords(char[] s) {
        if(s != null && s.length != 0) {
            int length = s.length;
            int start = 0;
            int end = 0;
            while(end < length) {
                if(s[end] == ' ') {
                    int current_start = start;
                    int current_end = end - 1;
                    while(current_start < current_end) {
                        char tmp = s[current_start];
                        s[current_start] = s[current_end];
                        s[current_end] = tmp;
                        current_start++;
                        current_end--;
                    }
                    end++;
                    start = end;
                }
                else {
                    end++;
                }
            }
            int current_start = start;
            int current_end = end - 1;
            while(current_start < current_end) {
                char tmp = s[current_start];
                s[current_start] = s[current_end];
                s[current_end] = tmp;
                current_start++;
                current_end--;
            }
            
            start = 0;
            end = length - 1;
            while(start < end) {
                char tmp = s[start];
                s[start] = s[end];
                s[end] = tmp;
                start++;
                end--;
            }
        }
    }
}