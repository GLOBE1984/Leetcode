Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.





class Solution {
    public int longestConsecutive(int[] nums) {
        if(nums != null && nums.length > 0) {
            Map<Integer, Span> map = new HashMap<>();
            
            for(int num : nums) {
                if(!map.containsKey(num)) {
                    if(map.containsKey(num-1) && map.containsKey(num+1)) {
                        Span span2 = map.get(num-1);
                        Span span1 = map.get(span2.min);
                        Span span3 = map.get(num+1);
                        Span span4 = map.get(span3.max);
                        
                        span1.max = span4.max;
                        span2.max = span4.max;
                        span3.min = span1.min;
                        span4.min = span1.min;
                        
                        Span span = new Span();
                        span.min = span1.min;
                        span.max = span4.max;
                        map.put(num, span);
                    } else if(map.containsKey(num-1)) {
                        Span span2 = map.get(num-1);
                        Span span1 = map.get(span2.min);
                        
                        span1.max = num;
                        span2.max = num;
                        
                        Span span = new Span();
                        span.min = span1.min;
                        span.max = num;
                        map.put(num, span);
                    } else if(map.containsKey(num+1)) {
                        Span span1 = map.get(num+1);
                        Span span2 = map.get(span1.max);
                        
                        span1.min = num;
                        span2.min = num;
                        
                        Span span = new Span();
                        span.min = num;
                        span.max = span2.max;
                        map.put(num, span);
                    } else {
                        Span span = new Span();
                        span.min = num;
                        span.max = num;
                        map.put(num, span);
                    }
                }
            }
            
            Iterator<Span> iterator = map.values().iterator();
            int longest = 0;
            while(iterator.hasNext()) {
                Span span = iterator.next();
                longest = Math.max(longest, (span.max-span.min+1));
            }
            
            return longest;
        } else {
            return 0;
        }
    }
    
    private class Span {
        private int min;
        private int max;
    }
}