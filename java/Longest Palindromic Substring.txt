Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example:

Input: "babad"

Output: "bab"

Note: "aba" is also a valid answer.
Example:

Input: "cbbd"

Output: "bb"





public class Solution {
    public String longestPalindrome(String s) {
        if(s == null) {
            return null;
        }
        
        int length = s.length();
        int max = 0;
        int left = 0;
        int right = 1;
        for(int i = 0; i < length - 1; ++i) {
            if(s.charAt(i) == s.charAt(i + 1)) {
                int start = i;
                int end = i + 1;
                while(start >= 0 && end <= length - 1 && s.charAt(start) == s.charAt(end)) {
                    start--;
                    end++;
                }
                if((end-start+1) > max) {
                    left = start + 1;
                    right = end;
                    max = end - start + 1;
                }
            }
            
            if(i > 0 && s.charAt(i - 1) == s.charAt(i + 1)) {
                int start = i - 1;
                int end = i + 1;
                while(start >= 0 && end <= length - 1 && s.charAt(start) == s.charAt(end)) {
                    start--;
                    end++;
                }
                if((end-start+1) > max) {
                    left = start + 1;
                    right = end;
                    max = end - start + 1;
                }
            }
        }
        
        return s.substring(left, right);
    }
}