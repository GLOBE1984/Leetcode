Follow up for "Find Minimum in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

The array may contain duplicates.




public class Solution {
    public int findMin(int[] nums) {
        if(nums == null || nums.length == 0) {
            return -1;
        }
        
        return nums[findMin(nums, 0, nums.length-1)];
    }
    
    public int findMin(int[] nums, int start, int end) {
        if(start == end) {
            if(start == 0) {
                return 0;
            }
            else {
                if(nums[start-1] > nums[start]) {
                    return start;
                } else {
                    return 0;
                }
            }
        }
        int result1 = findMin(nums, start, (start+end)/2);
        int result2 = findMin(nums, (start+end)/2+1, end);
        
        return result1 + result2;
    }
}