Given an array where elements are sorted in ascending order, convert it to a height balanced BST




/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        if(nums == null || nums.length == 0) {
            return null;
        }
        
        TreeNode root = sortedArrayToBST(nums, 0, nums.length-1);
        
        return root;
    }
    
    private TreeNode sortedArrayToBST(int[] nums, int start, int end) {
        if(start > end) {
            return null;
        }
        if(start == end) {
            return new TreeNode(nums[start]);
        }
        
        int index = (start + end)/2;
        // e.g. start == 0, end == 1
        if(index == start) {
            index++;
        }
        TreeNode node = new TreeNode(nums[index]);
        TreeNode left = sortedArrayToBST(nums, start, index-1);
        TreeNode right = sortedArrayToBST(nums, index+1, end);
        node.left = left;
        node.right = right;
        
        return node;
    }
}