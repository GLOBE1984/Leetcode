Given a non-negative integer N, find the largest number that is less than or equal to N with monotone increasing digits.

(Recall that an integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.)

Example 1:
Input: N = 10
Output: 9

Example 2:
Input: N = 1234
Output: 1234

Example 3:
Input: N = 332
Output: 299

Note: N is an integer in the range [0, 10^9].





class Solution {
    public int monotoneIncreasingDigits(int N) {
        if(N >= 0) {
            char[] S = String.valueOf(N).toCharArray();
            int i = 1;
            while (i < S.length && S[i-1] <= S[i]) {
                i++;
            }
            while (0 < i && i < S.length && S[i-1] > S[i]) {
                S[--i]--;
            }
            for (int j = i+1; j < S.length; ++j) {
                S[j] = '9';
            }

            return Integer.parseInt(String.valueOf(S));
        }
        else {
            return -1;
        }
    }
}