In combinatorial mathematics, a derangement is a permutation of the elements of a set, such that no element appears in its original position.

There's originally an array consisting of n integers from 1 to n in ascending order, you need to find the number of derangement it can generate.

Also, since the answer may be very large, you should return the output mod 109 + 7.

Example 1:
Input: 3
Output: 2
Explanation: The original array is [1,2,3]. The two derangements are [2,3,1] and [3,1,2].
Note:
n is in the range of [1, 106].





class Solution {
    // ¥Ì≈≈Œ Ã‚, refer to https://zh.wikipedia.org/wiki/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98
    public int findDerangement(int n) {
        if(n == 1) {
            return 0;
        }
        if(n == 2) {
            return 1;
        }
        long a = 0;
        long b = 1;
        long c = 0;
        
        int i = 3;
        while(i <= n) {
            c = ((i-1) * (a + b)) % 1000000007;
            a = b;
            b = c;
            i++;
        }
        
        return (int)c;
    }
}