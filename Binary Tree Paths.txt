Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]




/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<String>();
        
        if(root != null) {
            binaryTreePaths(root, list, root.val+"");
        }

        return list;
    }
    
    private void binaryTreePaths(TreeNode root, List<String> list, String path) {
        if(root.left == null && root.right == null) {
            list.add(path);
            return;
        }
        
        if(root.left != null) {
            binaryTreePaths(root.left, list, path+"->"+root.left.val);
        }
        if(root.right != null) {
            String newPath = new String(path);
            binaryTreePaths(root.right, list, newPath+"->"+root.right.val);
        }
    }
}